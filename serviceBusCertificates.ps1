param(
    [Parameter(Mandatory=$true)]
    [ValidateSet("DEV","TEST","UAT","PROD_T1","PROD_T2","QA","TEST_JERAT","TEST_PROD")]
    [string]$EnvType,
    
    
    [switch]$Install
    )


$certs = @{"DEV"=@{ "\\dcdwvwsba02\ServiceBusCertificates\AutoGeneratedCA.cer"="324421cbe3cb9891dea0166e66f697ea3a16c2b5";
                    "\\dcdwvwsba03\ServiceBusCertificates\AutoGeneratedCA.cer"="324421cbe3cb9891dea0166e66f697ea3a16c2b5";
                    "\\dcdwvwsba04\ServiceBusCertificates\AutoGeneratedCA.cer"="324421cbe3cb9891dea0166e66f697ea3a16c2b5"
                 };
            "TEST"=@{"\\dctwvwsba11\ServiceBusCertificates\.ServiceBus.CA.cer"="8ae28091ac76ca37fb7b04de119e58882a43f916";
                     "\\dctwvwsba12\ServiceBusCertificates\.ServiceBus.CA.cer"="01aa525fa345e1ae5cf8825c9a3c68a57cf0613f";
                     "\\dctwvwsba13\ServiceBusCertificates\.ServiceBus.CA.cer"="2ac12586ceb295b4e36c82e632d7f5076415a782"
                        
                    };
            "QA"=@{"\\dcuwvwsba06\ServiceBusCertificates\.ServiceBus.CA.cer"="0646f844be334aafaad2dd6118cc66139768e8e3" };
            "UAT"=@{"\\dcuwvwsba07\ServiceBusCertificates\.ServiceBus.CA.cer"="c9b02723a1aefe051e32d477a490bc978a9280d0";
                    "\\dcuwvwsba08\ServiceBusCertificates\AutoGeneratedCA.cer"="af17d23dc75e04695d674045be19ec1915431089";
                    "\\dcuwvwsba09\ServiceBusCertificates\AutoGeneratedCA.cer"="af17d23dc75e04695d674045be19ec1915431089"
            
                    };
            "PROD_T1"=@{"\\dcpwvwsba01\ServiceBusCertificates\.ServiceBus.CA.cer"="870ce93815536651fe3ca423ebb05b3bb9c7ee74";
                    "\\dcpwvwsba02\ServiceBusCertificates\.ServiceBus.CA.cer"="870ce93815536651fe3ca423ebb05b3bb9c7ee74";
                    "\\dcpwvwsba03\ServiceBusCertificates\.ServiceBus.CA.cer"="870ce93815536651fe3ca423ebb05b3bb9c7ee74"    
                    };

            "PROD_T2"=@{"\\dcpwvwsba04\ServiceBusCertificates\.ServiceBus.CA.cer"="ebb1bebd0580ceca567f7d193c33694eb24ab1e2"};

            "TEST_JERAT"=@{"\\chtwvwsba01\Certificate\.ServiceBus.CA.cer"="5769a085be93da068e94d84356212af75a5f7994";
                           "\\chtwvwsba02\Certificate\.ServiceBus.CA.cer"="5769a085be93da068e94d84356212af75a5f7994"
                        };

            "PROD_JERAT"=@{"\\chpwvwsba01\ServiceBusCertificates\.ServiceBus.CA.cer"="829f3f27c58c77ec1b22b14850923ba00a0d01dc";
            
                           "\\chpwvwsba02\ServiceBusCertificates\.ServiceBus.CA.cer"="829f3f27c58c77ec1b22b14850923ba00a0d01dc"
                          };

           }

$selectedCerts = $certs[$EnvType]

Write-Output "ServiceBus certificates configuration: http://confluence/display/SBFWS/Verify+which+Service+Bus+public+certificates+are+installed"
Write-Output ""

$res = $true
foreach($currKey in $selectedCerts.Keys)
{
    $CertPath = $currKey
    $Thumbprint = $selectedCerts[$currKey]
   
    $pfx = new-object System.Security.Cryptography.X509Certificates.X509Certificate2 
    $pfx.import($CertPath) 

    if($pfx.Thumbprint -notlike $Thumbprint)
    {
        Write-Output "!!! Cert $CertPath thumbprint: $($pfx.Thumbprint) doesn't match script thumbprint: $Thumbprint"
        $res = $false
    }

    $certResult =  Get-ChildItem Cert:\LocalMachine\Root | where { $_.Thumbprint -like $Thumbprint }  
    if($certResult -eq $null)
    {
        if($Install.IsPresent)
        {
            $store = new-object System.Security.Cryptography.X509Certificates.X509Store("Root","LocalMachine") 
            $store.open("MaxAllowed") 
            $store.add($pfx) 
            $store.close() 
            Write-Output "Cert $CertPath thumbprint: $($pfx.Thumbprint) has been installed"
        }
        else
        {
            Write-Output "!!! Cert $CertPath thumbprint: $($pfx.Thumbprint) is NOT installed"
            $res = $false
        }
    }
    else
    {        
            Write-Output "Cert $CertPath thumbprint: $($pfx.Thumbprint) is already installed"
    }  

}

if(!$res)
{
    Write-Output "`n !!! FAILURE !!! Please check logs above."
    exit -1
}
else
{
    Write-Output "Success."
    exit 0
}
